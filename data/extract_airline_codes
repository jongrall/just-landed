#!/usr/bin/env python

"""extract_airline_codes.py: Script that builds a clean CSV of airline codes."""

__author__ = "Jon Grall"
__copyright__ = "Copyright 2012, Little Details LLC"
__email__ = "jon@littledetails.net"

import sys
import logging
import csv
import re

AIRLINE_CODE_RE = re.compile('\A[A-Z0-9]{2,3}')

def scrub_airlines():
    # Load the files
    src_file = open('all_airlines.csv', 'rU')
    dest_file = open('airlines.csv', 'w')
    airline_data = csv.reader(src_file)
    sanitized_airline_data = csv.writer(dest_file, quoting=csv.QUOTE_ALL)
    count = 0
    wrote_count = 0
    new_rows = []

    try:
        for airline in airline_data:
            # Process airline
            count += 1
            # Cleanup airline data
            airline = [part.decode('utf-8').replace('"','') for part in airline]
            airline = [part.replace('\N','').replace('N/A','') for part in airline]
            airline = [part.replace('\\','') for part in airline]
            _, name, __, iata, icao, ___, ____, active = airline
            # Cleanup codes
            matched_iata = AIRLINE_CODE_RE.match(iata.upper())
            matched_icao = AIRLINE_CODE_RE.match(icao.upper())
            iata = (matched_iata and matched_iata.group(0)) or ''
            icao = (matched_icao and matched_icao.group(0)) or ''

            if active == 'Y' and (len(icao) > 0 or len(iata) > 0):
                wrote_count += 1
                # Insert " quotes to force them to be interpreted as strings
                new_info = [icao or '', iata or '', name.strip()]
                new_airline = [part.encode('utf-8') for part in new_info]
                new_rows.append(new_airline)
        if new_rows:
            all_names = [airline[2].upper().strip() for airline in new_rows]
            unique_names = set(all_names)
            if len(all_names) != len(unique_names):
                for name in unique_names:
                    try:
                        all_names.remove(name)
                    except ValueError:
                        pass
                print 'DUPES %s' % all_names
            # Sort rows by name, don't assume they came in sorted order
            sanitized_airline_data.writerow(['icao', 'iata', 'name']) # Header row
            new_rows.sort(key=lambda airline: airline[2].upper().strip())
            sanitized_airline_data.writerows(new_rows)
    finally:
        src_file.close()
        dest_file.close()
        print '\nPROCESSED: %d AIRLINES' % count
        print '\nKEPT %d AIRLINES' % wrote_count

if __name__ == '__main__':
    scrub_airlines()